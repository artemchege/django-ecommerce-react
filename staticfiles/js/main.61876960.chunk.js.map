{"version":3,"sources":["constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Paginate.js","components/AlertMessage.js","constants/productConstants.js","actions/productActions.js","components/ProductCarousel.js","pages/HomePage.js","pages/ProductDetail.js","constants/cartConstance.js","actions/cartActions.js","pages/CartScreen.js","components/FormContainer.js","pages/LoginScreen.js","pages/RegisterScreen.js","pages/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","pages/ShippingScreen.js","pages/PaymentScreen.js","pages/PlaceOrderScreen.js","pages/OrderScreen.js","pages/UserListScreen.js","pages/UserEditScreen.js","pages/ProductListScreen.js","pages/ProductEditScreen.js","pages/OrderListScreen.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducer.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_SUCCESS_REQUEST","ORDER_FAIL_REQUEST","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVERED_REQUEST","ORDER_DELIVERED_SUCCESS","ORDER_DELIVERED_FAIL","getUserDetails","id","dispatch","getState","a","type","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","detail","message","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","Header","useDispatch","useSelector","state","Navbar","bg","expand","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","isAdmin","Footer","Container","Row","Col","Rating","this","props","text","Component","Product","Card","product","_id","Img","style","height","src","image","Body","Title","Text","as","rating","numReviews","color","price","Loader","Spinner","animation","role","width","margin","display","Paginate","pages","page","split","Pagination","Array","keys","map","x","active","AlertMessage","children","Alert","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAIL_REQUEST","PRODUCT_DETAIL_SUCCESS","PRODUCT_DETAIL_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProducts","listProductDetails","ProductCarousel","productTop","topProducts","error","loading","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomePage","productList","products","search","sm","md","lg","xl","ProductDetail","match","qty","setQty","setRating","comment","setComment","productDetails","productReviewCreate","loadingProductReview","successProductReview","success","errorProductReview","params","ListGroup","description","countInStock","xs","reviews","length","review","createdAt","substring","post","Group","controlId","Label","row","disabled","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS_ITEM","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","productId","Number","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","required","ProfileScreen","userDetails","user","orderListMy","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","responsive","order","totalPrice","isPaid","paidAt","isDelivered","class","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","orderCreate","itemsPrice","shippingPrice","taxPrice","index","createOrder","orderItems","stripePromise","loadStripe","OrderScreen","orderId","orderDetails","orderDelivered","successDelivered","orderPrice","pk","handleClick","event","stripe","redirectToCheckout","sessionId","deliveredAt","deliverOrder","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","window","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","userUpdate","updateError","updateSuccess","update","ProductListScreen","productCreate","errorCreate","successCreate","createdProduct","productDelete","errorDelete","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","file","files","formData","FormData","append","File","custom","OrderListScreen","orderList","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","userUpdateProfile","updatedUser","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61876960.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\n\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_SUCCESS_REQUEST = 'ORDER_SUCCESS_REQUEST'\r\nexport const ORDER_FAIL_REQUEST = 'ORDER_FAIL_REQUEST'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVERED_REQUEST = 'ORDER_DELIVERED_REQUEST'\r\nexport const ORDER_DELIVERED_SUCCESS = 'ORDER_DELIVERED_SUCCESS'\r\nexport const ORDER_DELIVERED_FAIL = 'ORDER_DELIVERED_FAIL'\r\nexport const ORDER_DELIVERED_RESET = 'ORDER_DELIVERED_RESET'\r\n\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_SUCCESS, \r\n    USER_DETAILS_FAIL, \r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_SUCCESS, \r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_LIST_REQUEST, \r\n    USER_LIST_SUCCESS, \r\n    USER_LIST_FAIL, \r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST, \r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL, \r\n    USER_UPDATE_REQUEST, \r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL, \r\n    USER_UPDATE_RESET, \r\n  } from \"../constants/userConstants\";\r\n  import { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n  import axios from 'axios'\r\n\r\n\r\n  export const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            {'username': email, 'password': password}, \r\n            config,\r\n            )\r\n        \r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }catch(error){\r\n        dispatch({type: USER_LOGIN_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo', null)\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            {'name': name, 'email': email, 'password': password}, \r\n            config,\r\n            )\r\n        \r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data })\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }catch(error){\r\n        dispatch({type: USER_REGISTER_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n    \r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`, \r\n            config,\r\n            )\r\n        \r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: USER_DETAILS_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (name, email, password) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.put(\r\n            '/api/users/profile/update/', \r\n            {'name': name, 'email': email, 'password': password},\r\n            config,\r\n            )\r\n        \r\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data })\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }catch(error){\r\n        dispatch({type: USER_UPDATE_PROFILE_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: USER_LIST_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/users/', config,\r\n            )\r\n        \r\n        dispatch({ type: USER_LIST_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: USER_LIST_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}/`, config,\r\n            )\r\n        \r\n        dispatch({ type: USER_DELETE_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: USER_DELETE_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (id, update) => (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = axios.put(\r\n            `/api/users/update/${id}/`, update, config, \r\n            )\r\n        \r\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: USER_UPDATE_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword) {\r\n            history.push(`/?keyword=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control \r\n            type='text' \r\n            name='q' \r\n            onChange={e => setKeyword(e.target.value)}\r\n            className='mr-1 ml-1'\r\n            ></Form.Control>\r\n            <Button type='submit' variant='success outlined' className='p-2 mr-4'>Search</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from \"react\";\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport SearchBox from './SearchBox'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction Header() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <LinkContainer to=\"/\">\r\n          <Navbar.Brand>Favorite Bookshop</Navbar.Brand>\r\n        </LinkContainer>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <SearchBox></SearchBox>\r\n          <Nav className=\"mr-auto\">\r\n            <LinkContainer to=\"/cart\">\r\n              <Nav.Link>\r\n                <i className=\"fas fa-shopping-cart\"></i>Cart\r\n              </Nav.Link>\r\n            </LinkContainer>\r\n            {userInfo ? (\r\n              <NavDropdown title={userInfo.name} id=\"username\">\r\n                <LinkContainer to=\"/profile\">\r\n                  <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                </LinkContainer>\r\n\r\n                <NavDropdown.Item onClick={logoutHandler}>\r\n                  Logout\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            ) : (\r\n              <LinkContainer to=\"/login\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-user\"></i>Login\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            )}\r\n            {userInfo && userInfo.isAdmin && (\r\n              <NavDropdown title='Admin panel' id=\"adminmenu\">\r\n                <LinkContainer to=\"/admin/userlist/\">\r\n                  <NavDropdown.Item>Users</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to=\"/admin/productlist/\">\r\n                  <NavDropdown.Item>Products</NavDropdown.Item>\r\n                </LinkContainer>\r\n                <LinkContainer to=\"/admin/orderlist/\">\r\n                  <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                </LinkContainer>\r\n              </NavDropdown>\r\n            )}\r\n          </Nav>\r\n          \r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright ArtemChege INC.\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Rating extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"rating\">\r\n        <span>\r\n          <i \r\n            className={\r\n              this.props.value >= 1\r\n                ? \"fas fa-star\"\r\n                : this.props.value >= 0.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n          ></i>\r\n        </span>\r\n\r\n        <span>\r\n        <i\r\n            className={\r\n            this.props.value >= 2\r\n                ? \"fas fa-star\"\r\n                : this.props.value >= 1.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n        ></i>\r\n        </span>\r\n\r\n        <span>\r\n        <i\r\n            className={\r\n            this.props.value >= 3\r\n                ? \"fas fa-star\"\r\n                : this.props.value >= 2.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n        ></i>\r\n        </span>\r\n\r\n        <span>\r\n        <i\r\n            className={\r\n            this.props.value >= 4\r\n                ? \"fas fa-star\"\r\n                : this.props.value >= 3.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n        ></i>\r\n        </span>\r\n\r\n        <span>\r\n        <i\r\n            className={\r\n            this.props.value >= 5\r\n                ? \"fas fa-star\"\r\n                : this.props.value >= 4.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n        ></i>\r\n        </span>\r\n        \r\n        <div>{this.props.text ? this.props.text : ''}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Card } from \"react-bootstrap\";\r\nimport React, { Component } from \"react\";\r\nimport Rating from './Rating.js';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n          <Link to={`product/${this.props.product._id}`}>\r\n            <Card.Img style={{height: '400px'}} src={this.props.product.image} />\r\n          </Link>\r\n          <Card.Body>\r\n            <Link to={`product/${this.props.product._id}`}>\r\n              <Card.Title>{this.props.product.name}</Card.Title>\r\n            </Link>\r\n            <Card.Text as='div'>\r\n              <div className=\"my-3\">\r\n                <Rating value={this.props.product.rating} text={this.props.product.numReviews + ' reviews'} color={'#f8e825'}/>\r\n              </div>\r\n            </Card.Text>\r\n            <Card.Text as='h4'>\r\n                {this.props.product.price}{\" \"}$\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        height: \"100px\",\r\n        width: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin=false}) {\r\n\r\n    if (keyword) {\r\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\r\n    }\r\n\r\n    return (\r\n        pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x+1} to={!isAdmin ? `/?keyword=${keyword}&page=${x+1}`: `/admin/productlist/?keyword=${keyword}&page=${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport default function AlertMessage({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAIL_REQUEST = 'PRODUCT_DETAIL_REQUEST'\r\nexport const PRODUCT_DETAIL_SUCCESS = 'PRODUCT_DETAIL_SUCCESS'\r\nexport const PRODUCT_DETAIL_FAIL = 'PRODUCT_DETAIL_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n\r\n\r\n","import axios from 'axios'\r\nimport { PRODUCT_LIST_REQUEST, \r\n        PRODUCT_LIST_SUCCESS, \r\n        PRODUCT_LIST_FAIL,\r\n        PRODUCT_DETAIL_REQUEST, \r\n        PRODUCT_DETAIL_SUCCESS, \r\n        PRODUCT_DETAIL_FAIL, \r\n        PRODUCT_DELETE_REQUEST, \r\n        PRODUCT_DELETE_SUCCESS, \r\n        PRODUCT_DELETE_FAIL,\r\n        PRODUCT_CREATE_REQUEST , \r\n        PRODUCT_CREATE_SUCCESS, \r\n        PRODUCT_CREATE_FAIL, \r\n        PRODUCT_CREATE_RESET, \r\n        PRODUCT_UPDATE_REQUEST, \r\n        PRODUCT_UPDATE_SUCCESS, \r\n        PRODUCT_UPDATE_FAIL, \r\n        PRODUCT_UPDATE_RESET, \r\n        PRODUCT_CREATE_REVIEW_REQUEST, \r\n        PRODUCT_CREATE_REVIEW_SUCCESS, \r\n        PRODUCT_CREATE_REVIEW_FAIL, \r\n        PRODUCT_CREATE_REVIEW_RESET, \r\n        PRODUCT_TOP_REQUEST, \r\n        PRODUCT_TOP_SUCCESS, \r\n        PRODUCT_TOP_FAIL, \r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = (keyword='') => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/products${keyword}`)\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_LIST_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: PRODUCT_DETAIL_REQUEST })\r\n        const { data } = await axios.get('/api/products/' + id)\r\n        dispatch({ type: PRODUCT_DETAIL_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_DETAIL_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}/`, config,\r\n            )\r\n        \r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_DELETE_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: PRODUCT_CREATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`, {}, config,\r\n            )\r\n        \r\n        dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_CREATE_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (id, update) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: PRODUCT_UPDATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${id}/`, update, config,\r\n            )\r\n        \r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data })\r\n        dispatch({ type: PRODUCT_DETAIL_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_UPDATE_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const createProductReview = (id, review) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${id}/reviews/`, review, config,\r\n            )\r\n        \r\n        dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_CREATE_REVIEW_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const productsTop = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top/`)\r\n        \r\n        dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: PRODUCT_TOP_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport AlertMessage from './AlertMessage'\r\nimport { productsTop } from '../actions/productActions'\r\n\r\n\r\nfunction ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.productTop)\r\n    const {topProducts, error, loading} = productTop \r\n\r\n    useEffect(() => {\r\n        dispatch(productsTop())\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <Loader></Loader> \r\n            : error? <AlertMessage variant='danger'>{error}</AlertMessage> \r\n            : (\r\n                <Carousel pause='hover' className='bg-light'>\r\n                    {topProducts.map((product) => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/prouct/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid></Image>\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name}</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport ProductCarousel from \"../components/ProductCarousel\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProducts } from \"../actions/productActions\";\r\n\r\nexport default function HomePage({ history }) {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { error, loading, products, page, pages } = productList;\r\n\r\n  let keyword = history.location.search;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword));\r\n  }, [dispatch, keyword]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"my-4\"> The best choice</h1>\r\n      {!keyword && <ProductCarousel className='my-4'></ProductCarousel>}\r\n      <h1 className=\"my-4\">Latest products</h1>\r\n      {loading ? <Loader /> : null}\r\n      {error ? (\r\n        <AlertMessage variant=\"danger\">{error}</AlertMessage>\r\n      ) : (\r\n        <div>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate page={page} pages={pages} keyword={keyword}></Paginate>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Row, Col, Image, ListGroup, Button, Card, Form } from \"react-bootstrap\";\r\nimport Product from \"../components/Product\";\r\nimport Rating from \"../components/Rating\";\r\nimport { Link } from \"react-router-dom\";\r\nimport React, { Component, useEffect, useState } from \"react\";\r\nimport Loader from \"../components/Loader\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetails, createProductReview } from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nexport default function ProductDetail({match, history}) {\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const Product = useSelector((state) => state.productDetails);\r\n  const { error, loading, product } = Product;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const { loading:loadingProductReview, success:successProductReview, error:errorProductReview } = productReviewCreate;\r\n  \r\n  useEffect(() => {\r\n    if(successProductReview) {\r\n      setRating(0)\r\n      setComment('')\r\n      dispatch({type: PRODUCT_CREATE_REVIEW_RESET})\r\n    }\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(product._id, {rating, comment}))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"btn btn-light my-3\">\r\n        Back to shop\r\n      </Link>\r\n\r\n      {loading ? <Loader /> : error ? <AlertMessage variant='danger'>{error}</AlertMessage> : (\r\n        <div>\r\n          <Row>\r\n          <Col md={6}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={product.numReviews + \" reviews\"}\r\n                />\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h4>Price: {product.price}$</h4>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <span>Description: {product.description}</span>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card className=\"p-2\">\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>{product.countInStock > 0 ? \"In stock\" : \"empty\"}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {product.countInStock>0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        Qty\r\n                      </Col>\r\n                      <Col xs='auto' className='my-1'>\r\n                        <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                            {\r\n                              [...Array(product.countInStock).keys()].map((x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              ))\r\n                            }\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className={\r\n                      product.countInStock > 0\r\n                        ? \"btn btn-block\"\r\n                        : \"btn btn-block disabled\"\r\n                    }\r\n                    type=\"button\"\r\n                  >\r\n                    Add to cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n          <Row>\r\n            <Col md={6} className='my-4'>\r\n              <h4>\r\n                Reviews\r\n              </h4>\r\n              {product.reviews.length === 0 && <AlertMessage variant='info'>There is no reviews</AlertMessage>}\r\n              <ListGroup variant='flush'>\r\n                  {product.reviews.map(review => (\r\n                    <ListGroup.Item key={review._id}>\r\n                        <h5>{review.name}</h5>\r\n                        <Rating value={review.rating}></Rating>\r\n                        <p>{review.createdAt.substring(0, 10)}</p>\r\n                        <p>{review.comment}</p>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n\r\n                  <ListGroup.Item>\r\n                    <h4>Write a review</h4>\r\n\r\n                    {loadingProductReview && <Loader></Loader>}\r\n                    {successProductReview && <AlertMessage variant='info'>Review submitted</AlertMessage>}\r\n                    {errorProductReview && <AlertMessage variant='danger'>{errorProductReview}</AlertMessage>}\r\n\r\n                    {userInfo ? (\r\n                      <Form onSubmit={submitHandler}>\r\n                          <Form.Group controlId='rating'>\r\n                            <Form.Label>Rating</Form.Label>\r\n                            <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                              <option value=''>Select...</option>\r\n                              <option value='1'>1 - shitty </option>\r\n                              <option value='2'>2 - hm...</option>\r\n                              <option value='3'>3 - not bad</option>\r\n                              <option value='4'>4 - nice one</option>\r\n                              <option value='5'>5 - the choice of my life</option>\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                          <Form.Group controlId='comment'>\r\n                            <Form.Label>Review</Form.Label>\r\n                            <Form.Control as='textarea' row={5} value={comment} onChange={e => setComment(e.target.value)}>\r\n                            </Form.Control>\r\n                          </Form.Group>\r\n                          <Button className='btn btn-block' disabled={loadingProductReview} type='submit'>\r\n                            Sumbit\r\n                          </Button>\r\n                      </Form>\r\n                    ) : <AlertMessage variant='info'>\r\n                      To comment you must <Link to='/login'>login</Link>\r\n                      </AlertMessage>}\r\n                  </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS_ITEM = 'CART_SAVE_SHIPPING_ADDRESS_ITEM'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS_ITEM, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstance'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get('/api/products/' + id)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id, \r\n            name: data.name, \r\n            image: data.image, \r\n            price: data.price, \r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id, \r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS_ITEM,\r\n        payload: data, \r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data, \r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\n\r\nexport default function CartScreen({ match, location, history }) {\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n      history.push('/shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1 className='my-4'>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <AlertMessage variant=\"info\">\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </AlertMessage>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>{item.price}$</Col>\r\n\r\n                  <Col md={3}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1}>\r\n                      <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}>\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n          <Card className='my-4'>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                    <h2>Subtotal {cartItems.reduce((acc, item) => acc + item.qty, 0)} </h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <h6>Total price: {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}$</h6>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n              <ListGroup.Item>\r\n                  <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>\r\n                        Checkout\r\n                  </Button>\r\n              </ListGroup.Item>\r\n          </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={8}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport Loader from \"../components/Loader\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../actions/userActions'\r\n\r\nfunction LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {loading, userInfo, error} = userLogin\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [userInfo, redirect, error])\r\n\r\n    const submitHander = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1 className='my-4'>Sign in</h1>\r\n            { error && <AlertMessage variant=\"danger\" className=\"my-4\">Oops! {error}</AlertMessage>}\r\n            { loading  && <Loader/> }\r\n            <Form onSubmit={submitHander} className='my-4'>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email address\r\n                    </Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={((e) => setEmail(e.target.value))}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={((e) => setPassword(e.target.value))}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row>\r\n                <Col>\r\n                    New? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Registration</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../actions/userActions\";\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, userInfo, error } = userRegister;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [userInfo, redirect, error]);\r\n\r\n  const submitHander = (e) => {\r\n    e.preventDefault();\r\n    if (password != confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1 className=\"my-4\">Register</h1>\r\n      {error && (\r\n        <AlertMessage variant=\"danger\" className=\"my-4\">\r\n          Oops! {error}\r\n        </AlertMessage>\r\n      )}\r\n      {loading && <Loader />}\r\n      {message && (<AlertMessage variant=\"danger\" className=\"my-4\">\r\n          Oops! {message}\r\n      </AlertMessage>)}\r\n      <Form onSubmit={submitHander} className=\"my-4\">\r\n        <Form.Group controlId=\"name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"name\"\r\n            placeholder=\"Enter name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"passwordConfirm\">\r\n          <Form.Label>Confirm your password</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Confirm your password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Sign In\r\n        </Button>\r\n\r\n        <Row className=\"my-4\">\r\n          <Col>\r\n            Already have an account?{\" \"}\r\n            <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n              Login\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport Loader from \"../components/Loader\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport { useDispatch, useSelector, useStore } from \"react-redux\";\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\r\n\r\nfunction ProfileScreen({ history }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading:loadingOrders, error:errorOrders, orders } = orderListMy;\r\n\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n        history.push('/login')\r\n    } else {\r\n      if (!user || !user.name) {\r\n        dispatch(getUserDetails(\"profile\"));\r\n        dispatch(listMyOrders())\r\n      } else {\r\n        setName(userInfo.name);\r\n        setEmail(userInfo.email);\r\n      }\r\n    }\r\n  }, [dispatch, user, error, history]);\r\n\r\n  const submitHander = (e) => {\r\n    e.preventDefault();\r\n    if (password != confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(updateUserProfile(name, email, password));\r\n      setMessage(\"\"); // in case to clear 'Passwords do not match'\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row className=\"my-4\">\r\n      <Col md={3}>\r\n        <h2>User profile</h2>\r\n        {error && (\r\n          <AlertMessage variant=\"danger\" className=\"my-4\">\r\n            Oops! {error}\r\n          </AlertMessage>\r\n        )}\r\n        {loading && <Loader />}\r\n        {message && (\r\n          <AlertMessage variant=\"danger\" className=\"my-4\">\r\n            Oops! {message}\r\n          </AlertMessage>\r\n        )}\r\n        <Form onSubmit={submitHander} className=\"my-4\">\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"passwordConfirm\">\r\n            <Form.Label>Confirm your password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm your password\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"primary\">\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n\r\n      <Col md={9}>\r\n        <h2>My orders</h2>\r\n        {loadingOrders? \r\n        (<Loader></Loader>) : \r\n        errorOrders? \r\n        <AlertMessage variant='danger'>{errorOrders}</AlertMessage> : (\r\n          <Table striped responsive className='table-sm'>\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>Date</th>\r\n                  <th>Total</th>\r\n                  <th>Paid</th>\r\n                  <th>Delivered</th>\r\n                  <th>Order</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                  {orders.map(order => (\r\n                    <tr key={order._id}>\r\n                        <td>{order._id}</td>\r\n                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                        <td>{order.totalPrice}$</td>\r\n                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : (<i className='fas fa-times' style={{color: 'red'}}></i>)}</td>\r\n                        <td>{order.isDelivered ? (<i class=\"fas fa-check\"></i>) : (<i className='fas fa-times' style={{color: 'red'}}></i>)}</td>\r\n                        <td><Link to={'/order/'+order._id}><Button className='btn-sm'>View order</Button></Link></td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import { ORDER_CREATE_REQUEST, \r\n    ORDER_SUCCESS_REQUEST, \r\n    ORDER_FAIL_REQUEST,     \r\n    ORDER_DETAILS_REQUEST, \r\n    ORDER_DETAILS_SUCCESS, \r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS, \r\n    ORDER_LIST_MY_FAIL, \r\n    ORDER_LIST_REQUEST, \r\n    ORDER_LIST_SUCCESS, \r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVERED_REQUEST,\r\n    ORDER_DELIVERED_SUCCESS,\r\n    ORDER_DELIVERED_FAIL, \r\n    ORDER_DELIVERED_RESET,\r\n } from '../constants/orderConstants'\r\nimport axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstance'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: ORDER_CREATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.post(\r\n            '/api/orders/add/', \r\n            order,\r\n            config,\r\n            )\r\n        \r\n        dispatch({ type: ORDER_SUCCESS_REQUEST, payload: data })\r\n        dispatch({ type: CART_CLEAR_ITEMS, payload: data })\r\n        localStorage.removeItem('cartItems')\r\n    }catch(error){\r\n        dispatch({type: ORDER_FAIL_REQUEST, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (pk) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: ORDER_DETAILS_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.get(`/api/orders/${pk}`, config)\r\n        \r\n        dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: ORDER_DETAILS_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: ORDER_LIST_MY_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n        \r\n        dispatch({ type: ORDER_LIST_MY_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: ORDER_LIST_MY_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: ORDER_LIST_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.get(`/api/orders/`, config)\r\n        \r\n        dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: ORDER_LIST_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: ORDER_DELIVERED_REQUEST })\r\n\r\n        const {\r\n            userLogin: {userInfo}\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.put(`/api/orders/${order._id}/delivered/`, {}, config)\r\n        \r\n        dispatch({ type: ORDER_DELIVERED_SUCCESS, payload: data })\r\n    }catch(error){\r\n        dispatch({type: ORDER_DELIVERED_FAIL, payload: error.response && error.response.data.detail\r\n            ? error.response.data.detail\r\n            : error.message, \r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\r\n  return (\r\n    <Nav className=\"justify-content-center my-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/login\">\r\n            <Nav.Link>Login</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n            <Nav.Link disabled>\r\n                Login\r\n            </Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n            <Nav.Link disabled>\r\n                Shipping\r\n            </Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n            <Nav.Link disabled>\r\n                Payment\r\n            </Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n            <Nav.Link disabled>\r\n                Place Order\r\n            </Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveShippingAddress } from \"../actions/cartActions\";\r\n\r\n\r\nfunction ShippingScreen({ history }) {\r\n\r\n  const cart = useSelector(state => state.cart)\r\n  const {shippingAddress} = cart \r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n      e.preventDefault();\r\n      dispatch(saveShippingAddress({'address': address, 'city': city, 'postalCode': postalCode, 'country': country}))\r\n      history.push('/payment')\r\n    };\r\n\r\n  \r\n\r\n  return (\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2>\r\n\r\n        </CheckoutSteps>\r\n      <h1> Shipping </h1>\r\n      <Form onSubmit={submitHandler}>\r\n\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter address\"\r\n            value={address ? address : ''}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"city\">\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter city\"\r\n            value={city ? city : ''}\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"postalCode\">\r\n          <Form.Label>Postal code</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode? postalCode : ''}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"country\">\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter country\"\r\n            value={country? country : ''}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { savePaymentMethod } from \"../actions/cartActions\";\r\n\r\nfunction PaymentScreen({ history }) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n  const dispatch = useDispatch();\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"Stripe\");\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const sumbitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n      <Form onSubmit={sumbitHandler}>\r\n          <Form.Group>\r\n              <Form.Label as='legend'>\r\n                  Select Method\r\n              </Form.Label>\r\n              <Col>\r\n                <Form.Check type='radio' label='Stripe' id='Stripe' name='paymentMethod' checked onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                </Form.Check>\r\n              </Col>\r\n          </Form.Group>\r\n\r\n\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n\r\n    </FormContainer>\r\n  );\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nfunction PlaceOrderScreen({ history }) {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, error, success } = orderCreate;\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    .toFixed(2);\r\n  cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 10;\r\n  cart.taxPrice = (cart.itemsPrice * 0.2).toFixed(2);\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  if (!cart.paymentMethod) {\r\n    history.push(\"/payment\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [success, history]);\r\n\r\n  const placeOrder = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}\r\n                {\"   \"}\r\n                {cart.shippingAddress.postalCode}\r\n                {\"   \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Payment: </strong>\r\n                {cart.paymentMethod}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <AlertMessage variant=\"info\">Your cart is empty</AlertMessage>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} X {item.price}$ ={\" \"}\r\n                          {(item.qty * item.price).toFixed(2)}$\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>{cart.itemsPrice}$</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>{cart.shippingPrice}$</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax Price:</Col>\r\n                  <Col>{cart.taxPrice}$</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price:</Col>\r\n                  <Col>{cart.totalPrice}$</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                {error && <AlertMessage variant=\"danger\">{error}</AlertMessage>}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                {userInfo ? (\r\n                  <Button\r\n                    type=\"button\"\r\n                    className=\"btn-block\"\r\n                    disabled={cart.cartItems === 0}\r\n                    onClick={placeOrder}\r\n                  >\r\n                    Place Order\r\n                  </Button>\r\n                ) : (\r\n                  <AlertMessage variant='info'>You must log in before finishing the order, \r\n                    <Link to='/login'>here.</Link>\r\n                  </AlertMessage>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrderDetails, deliverOrder } from \"../actions/orderActions\";\r\nimport { ORDER_DELIVERED_RESET } from \"../constants/orderConstants\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport Loader from \"../components/Loader\";\r\nimport axios from 'axios'\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nconst stripePromise = loadStripe('pk_test_51IT6IwHbJhOfoAEvYBPNjlpDboyqz87KN0M3EZ3eBTwZCjACXXRRfiPB598KGbTkVE563k7lyxxUlLMdTYuIYz0200Qideg8UN');\r\n\r\nfunction OrderScreen({ match }) {\r\n  const orderId = match.params.id;\r\n\r\n  const dispatch = useDispatch();\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, error, loading } = orderDetails;\r\n\r\n  const orderDelivered = useSelector((state) => state.orderDelivered);\r\n  const { success:successDelivered, error:errorDelivered, loading:loadingDelivered } = orderDelivered;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading && !error && order) {\r\n    order.orderPrice = order.orderItems\r\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\r\n      .toFixed(2);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!order || order._id !== Number(order.id) || successDelivered) {\r\n      dispatch({ type: ORDER_DELIVERED_RESET })\r\n      dispatch(getOrderDetails(orderId));\r\n    }\r\n  }, [dispatch, successDelivered]);\r\n\r\n  const handleClick = async (event) => {\r\n    // Get Stripe.js instance\r\n    const stripe = await stripePromise;\r\n\r\n    const { data } = await axios.post(\r\n        '/api/orders/create-checkout-session/', \r\n        {'order': order._id}\r\n        )\r\n\r\n    const result = await stripe.redirectToCheckout({\r\n      sessionId: data.id,\r\n    });\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader></Loader>\r\n  ) : error ? (\r\n    <AlertMessage variant=\"danger\">{error}</AlertMessage>\r\n  ) : (\r\n    <div>\r\n      <h1>Order: {orderId}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: {order.user.name}</strong>\r\n              </p>\r\n              <p>\r\n                <strong>Email: {order.user.email}</strong>\r\n              </p>\r\n              <p>\r\n                <strong>Shipping: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                {\"   \"}\r\n                {order.shippingAddress.postalCode}\r\n                {\"   \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n\r\n              {order.isDelivered ? (\r\n                <AlertMessage variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </AlertMessage>\r\n              ) : (\r\n                <AlertMessage variant=\"warning\">\r\n                  Order is not delivered\r\n                </AlertMessage>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Payment: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n\r\n              {order.isPaid ? (\r\n                <AlertMessage variant=\"success\">\r\n                  Paid on {order.paidAt}\r\n                </AlertMessage>\r\n              ) : (\r\n                <AlertMessage variant=\"warning\">Order is not paid</AlertMessage>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <AlertMessage variant=\"info\">Order is empty</AlertMessage>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} X {item.price}$ ={\" \"}\r\n                          {(item.qty * item.price).toFixed(2)}$\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>{order.orderPrice}$</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>{order.shippingPrice}$</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax Price:</Col>\r\n                  <Col>{order.taxPrice}$</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total Price:</Col>\r\n                  <Col>{order.totalPrice}$</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n                \r\n                { order.isPaid ? (\r\n                    <Button role=\"link\" className='btn btn-block primary' disabled>\r\n                        {\" \"}\r\n                        Order is paid already\r\n                    </Button>\r\n                ) : (\r\n                    <Button role=\"link\" className='btn btn-block primary' onClick={handleClick}>\r\n                        {\" \"}\r\n                        Pay Stripe\r\n                    </Button>\r\n                )}\r\n\r\n                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                    <Button role=\"link\" className='btn btn-block primary' onClick={deliverHandler}>\r\n                        {\" \"}\r\n                        Mark as Delivered\r\n                    </Button>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listUsers, deleteUser } from \"../actions/userActions\";\r\n\r\n\r\nfunction UserListScreen() {\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success:successDelete } = userDelete;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(listUsers());\r\n  }, [dispatch, successDelete]);\r\n\r\n  const deleteHandler = (id) => {\r\n      if (window.confirm('Are your sure you want to delete this user?')) {\r\n        dispatch(deleteUser(id))\r\n      }}\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"my-4\">Users</h1>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <AlertMessage variant=\"danger\">{error}</AlertMessage>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Admin</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className=\"fas fa-check\" style={{ color: \"green\" }}></i>\r\n                  ) : (\r\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button className=\"btn-sm\">Edit</Button>\r\n                  </LinkContainer>\r\n                  <Button className=\"ml-1 btn-sm\">\r\n                    <i\r\n                      className=\"fas fa-trash\"\r\n                      onClick={() => deleteHandler(user._id)}\r\n                    ></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error:updateError, success:updateSuccess } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (updateSuccess) {\r\n        dispatch({type: USER_UPDATE_RESET})\r\n        history.push('/admin/userlist/')\r\n    }\r\n\r\n    if(!user.name || user._id != userId) {\r\n        dispatch(getUserDetails(userId))\r\n    } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n    }\r\n  }, [user, updateSuccess]);\r\n\r\n  const submitHander = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser(userId, {name, email, isAdmin}))\r\n    dispatch(getUserDetails(userId))\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <Link to='/admin/userlist/' className='btn btn-primary my-4'>Go Back</Link>\r\n        <FormContainer>\r\n            <h1 className=\"my-4\">Edit User</h1>\r\n            {updateError && <AlertMessage variant='danger'>{updateError}</AlertMessage>}\r\n            {loading ? <Loader /> : error? <AlertMessage variant='danger'>{error}</AlertMessage> : (\r\n                <Form onSubmit={submitHander} className=\"my-4\">\r\n                <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                    type=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"email\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"isadmin\">\r\n                <Form.Check\r\n                    type=\"checkbox\"\r\n                    label=\"Is Admin\"\r\n                    checked={isAdmin}\r\n                    onChange={(e) => setIsAdmin(e.target.checked)}\r\n                ></Form.Check>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                Sign In\r\n                </Button>\r\n\r\n            </Form>\r\n            )}\r\n            \r\n        </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport Paginate from \"../components/Paginate\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport {\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_RESET,\r\n} from \"../constants/productConstants\";\r\n\r\nfunction ProductListScreen({ history, match }) {\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pages, page } = productList;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: createLoading,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const { success: successDelete, error: errorDelete } = productDelete;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  let keyword = history.location.search\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n    dispatch({ type: PRODUCT_UPDATE_RESET });\r\n    if (userInfo && userInfo.isAdmin) {\r\n      if (successCreate) {\r\n        history.push(`/admin/product/${createdProduct._id}/edit/`);\r\n      } else {\r\n        dispatch(listProducts(keyword));\r\n      }\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete, successCreate, keyword]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are your sure you want to delete this product?\")) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row className=\"align-items-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button className=\"my-3\" onClick={createProductHandler}>\r\n            <i className=\"fas fa-plus\"></i> Create Button\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {errorDelete && (\r\n        <AlertMessage variant=\"danger\">{errorDelete}</AlertMessage>\r\n      )}\r\n      {errorCreate && (\r\n        <AlertMessage variant=\"danger\">{errorCreate}</AlertMessage>\r\n      )}\r\n\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <AlertMessage variant=\"danger\">{error}</AlertMessage>\r\n      ) : (\r\n        <div>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Price</th>\r\n                <th>Category</th>\r\n                <th>Brand</th>\r\n                <th>Functions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button className=\"btn-sm\">Edit</Button>\r\n                    </LinkContainer>\r\n                    <Button className=\"ml-1 btn-sm\">\r\n                      <i\r\n                        className=\"fas fa-trash\"\r\n                        onClick={() => deleteHandler(product._id)}\r\n                      ></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n      <Paginate page={page} pages={pages} isAdmin={true}></Paginate>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport axios from 'axios';\r\n\r\nfunction ProductEditScreen({ match, history }) {\r\n  const productId = match.params.id;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, product, error } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const { loading:updateLoading, error:updateError, success:updateSuccess } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (updateSuccess) { \r\n        history.push('/admin/productlist/')\r\n    }\r\n\r\n    if (!product.name || product._id != productId) {\r\n      dispatch(listProductDetails(productId));\r\n    } else {\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setImage(product.image);\r\n      setBrand(product.brand);\r\n      setCategory(product.category);\r\n      setCountInStock(product.countInStock);\r\n      setDescription(product.description);\r\n    }\r\n  }, [product._id, updateSuccess]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateProduct(productId, {name, price, image, brand, category, countInStock, description}))\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n\r\n    const file = e.target.files[0] \r\n    const formData = new FormData()\r\n\r\n    formData.append('image', file)\r\n    formData.append('product_id', productId)\r\n\r\n    setUploading(true)\r\n\r\n    try{\r\n\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/products/upload/', formData, config)\r\n\r\n        setImage(data)\r\n        setUploading(false)\r\n\r\n    }catch(error){\r\n      setUploading(false)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/productlist/\" className=\"btn btn-primary my-4\">\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1 className=\"my-4\">Edit Product</h1>\r\n\r\n        { updateError && <AlertMessage variant='danger'>{updateError}</AlertMessage>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <AlertMessage variant=\"danger\">{error}</AlertMessage>\r\n        ) : (\r\n          <Form onSubmit={submitHandler} className=\"my-4\">\r\n\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"price\">\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter price\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"image\">\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter image\"\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n\r\n              <Form.File id='image-file' label='Choose file' custom onChange={uploadFileHandler}>\r\n              </Form.File>\r\n\r\n              {uploading && <Loader></Loader>}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"brand\">\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter brand\"\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"countInStock\">\r\n              <Form.Label>In stock</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Enter amount in stock\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"category\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"description\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Edit\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport Loader from \"../components/Loader\";\r\nimport AlertMessage from \"../components/AlertMessage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listOrders } from \"../actions/orderActions\";\r\n\r\n\r\nfunction OrderListScreen({history}) {\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n        dispatch(listOrders())\r\n      } else {\r\n        history.push('/login')\r\n      }\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"my-4\">Orders</h1>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : error ? (\r\n        <AlertMessage variant=\"danger\">{error}</AlertMessage>\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0,10)}</td>\r\n                <td>{order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0,10)\r\n                  ) : (\r\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0,10)\r\n                  ) : (\r\n                    <i className=\"fas fa-check\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button className=\"btn-sm\">About</Button>\r\n                  </LinkContainer>\r\n                </td>\r\n\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderListScreen;\r\n","import Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { Container } from \"react-bootstrap\";\nimport HomePage from \"./pages/HomePage\";\nimport ProductDetail from \"./pages/ProductDetail\";\nimport CartScreen from \"./pages/CartScreen\";\nimport LoginScreen from './pages/LoginScreen'\nimport RegisterScreen from './pages/RegisterScreen'\nimport ProfileScreen from './pages/ProfileScreen'\nimport ShippingScreen from './pages/ShippingScreen'\nimport PaymentScreen from './pages/PaymentScreen'\nimport PlaceOrderScreen from './pages/PlaceOrderScreen'\nimport OrderScreen from './pages/OrderScreen';\nimport UserListScreen from './pages/UserListScreen';\nimport UserEditScreen from './pages/UserEditScreen';\nimport ProductListScreen from './pages/ProductListScreen';\nimport ProductEditScreen from './pages/ProductEditScreen';\nimport OrderListScreen from './pages/OrderListScreen';\nimport { HashRouter as Router , Route } from 'react-router-dom'; \n\nfunction App() {\n  return (\n    <Router>\n\n      <Header />\n\n      <Container>\n        <Route path='/' component={HomePage} exact/>\n        <Route path='/product/:id' component={ProductDetail} />\n        <Route path='/cart/:id?' component={CartScreen}/>\n        <Route path='/login' component={LoginScreen}/>\n        <Route path='/register' component={RegisterScreen}/>\n        <Route path='/shipping' component={ShippingScreen}/>\n        <Route path='/profile' component={ProfileScreen}/>\n        <Route path='/payment' component={PaymentScreen}/>\n        <Route path='/placeorder' component={PlaceOrderScreen}/>\n        <Route path='/order/:id' component={OrderScreen}/>\n        <Route path='/admin/userlist' component={UserListScreen}/>\n        <Route path='/admin/user/:id/edit' component={UserEditScreen}/>\n        <Route path='/admin/productlist/' component={ProductListScreen}/>\n        <Route path='/admin/product/:id/edit' component={ProductEditScreen}/>\n        <Route path='/admin/orderlist/' component={OrderListScreen}/>\n      </Container>\n\n      <Footer />\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productsTopReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducer'\r\nimport { orderCreateReducer, orderDetailsReducer, orderListMyReducer, orderListReducer, orderDeliveredReducer } from './reducers/orderReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer, \r\n    productCreate: productCreateReducer, \r\n    productUpdate: productUpdateReducer, \r\n    productReviewCreate: productReviewCreateReducer, \r\n    productTop: productsTopReducer,\r\n\r\n    cart: cartReducer, \r\n    \r\n    userLogin: userLoginReducer, \r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer, \r\n    userUpdateProfile: userUpdateProfileReducer, \r\n    userList: userListReducer, \r\n    userDelete: userDeleteReducer, \r\n    userUpdate: userUpdateReducer, \r\n\r\n    orderCreate: orderCreateReducer, \r\n    orderDetails: orderDetailsReducer, \r\n    orderListMy: orderListMyReducer, \r\n    orderList: orderListReducer, \r\n    orderDelivered: orderDeliveredReducer, \r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? \r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? \r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingFromStorage = localStorage.getItem('shippingAddress') ? \r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFromStorage, shippingAddress: shippingFromStorage},\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAIL_REQUEST, \r\n  PRODUCT_DETAIL_SUCCESS, \r\n  PRODUCT_DETAIL_FAIL,\r\n  PRODUCT_DELETE_REQUEST, \r\n  PRODUCT_DELETE_SUCCESS, \r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST , \r\n  PRODUCT_CREATE_SUCCESS, \r\n  PRODUCT_CREATE_FAIL, \r\n  PRODUCT_CREATE_RESET, \r\n  PRODUCT_UPDATE_REQUEST, \r\n  PRODUCT_UPDATE_SUCCESS, \r\n  PRODUCT_UPDATE_FAIL, \r\n  PRODUCT_UPDATE_RESET, \r\n  PRODUCT_CREATE_REVIEW_REQUEST, \r\n  PRODUCT_CREATE_REVIEW_SUCCESS, \r\n  PRODUCT_CREATE_REVIEW_FAIL, \r\n  PRODUCT_CREATE_REVIEW_RESET, \r\n  PRODUCT_TOP_REQUEST, \r\n  PRODUCT_TOP_SUCCESS, \r\n  PRODUCT_TOP_FAIL, \r\n} from \"../constants/productConstants\";\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, \r\n        products: action.payload.products, \r\n        page: action.payload.page, \r\n        pages: action.payload.pages };\r\n\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: []} }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DETAIL_REQUEST:\r\n        return { loading: true, product: {} }; \r\n  \r\n      case PRODUCT_DETAIL_SUCCESS:\r\n        return { loading: false, product: action.payload };\r\n  \r\n      case PRODUCT_DETAIL_FAIL:\r\n        return { loading: false, error: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport const productDeleteReducer = (state = { }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true }; \r\n\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = { }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true }; \r\n\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_CREATE_RESET: \r\n      return {}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true }; \r\n\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_UPDATE_RESET: \r\n      return {}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true }; \r\n\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true};\r\n\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case PRODUCT_CREATE_REVIEW_RESET: \r\n      return {}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productsTopReducer = (state = { topProducts: []}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { loading: true }; \r\n\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, topProducts: action.payload};\r\n\r\n    case PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS_ITEM,\r\n  CART_SAVE_PAYMENT_METHOD, \r\n  CART_CLEAR_ITEMS, \r\n} from \"../constants/cartConstance\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, item] };\r\n      }\r\n\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n\r\n    case CART_SAVE_SHIPPING_ADDRESS_ITEM:\r\n      return { ...state, shippingAddress: action.payload };\r\n\r\n    case CART_SAVE_PAYMENT_METHOD: \r\n      return  {...state, paymentMethod: action.payload}\r\n\r\n    case CART_CLEAR_ITEMS:\r\n      return { ...state, cartItems: []}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_REQUEST, \r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST, \r\n  USER_DETAILS_SUCCESS, \r\n  USER_DETAILS_FAIL, \r\n  USER_UPDATE_PROFILE_REQUEST, \r\n  USER_UPDATE_PROFILE_SUCCESS, \r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_LIST_REQUEST, \r\n  USER_LIST_SUCCESS, \r\n  USER_LIST_FAIL, \r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST, \r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL, \r\n  USER_UPDATE_REQUEST, \r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL, \r\n  USER_UPDATE_RESET, \r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true};\r\n\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LOGOUT:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST: \r\n    return { loading: true};\r\n\r\n    case USER_REGISTER_SUCCESS: \r\n    return { loading: false, userInfo: action.payload };\r\n\r\n    case USER_REGISTER_FAIL: \r\n    return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {user: {}}, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST: \r\n    return {...state, loading: true};\r\n\r\n    case USER_DETAILS_SUCCESS: \r\n    return { loading: false, user: action.payload };\r\n\r\n    case USER_DETAILS_FAIL: \r\n    return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST: \r\n    return { loading: true};\r\n\r\n    case USER_UPDATE_PROFILE_SUCCESS: \r\n    return { loading: false, userInfo: action.payload, success: true };\r\n\r\n    case USER_UPDATE_PROFILE_FAIL: \r\n    return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userListReducer = (state = {users: []}, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST: \r\n      return { loading: true};\r\n\r\n    case USER_LIST_SUCCESS: \r\n      return { loading: false, users: action.payload };\r\n\r\n    case USER_LIST_FAIL: \r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_LIST_RESET:\r\n      return { users: []}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST: \r\n      return { loading: true};\r\n\r\n    case USER_DELETE_SUCCESS: \r\n      return { loading: false, success: true };\r\n\r\n    case USER_DELETE_FAIL: \r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {user: {}}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST: \r\n      return { loading: true};\r\n\r\n    case USER_UPDATE_SUCCESS: \r\n      return { loading: false, updatedUser: action.payload, success: true };\r\n\r\n    case USER_UPDATE_FAIL: \r\n      return { loading: false, error: action.payload };\r\n\r\n    case USER_UPDATE_RESET: \r\n      return {}\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}","import { ORDER_CREATE_REQUEST, \r\n    ORDER_SUCCESS_REQUEST, \r\n    ORDER_FAIL_REQUEST, \r\n    ORDER_CREATE_RESET,\r\n    ORDER_DETAILS_REQUEST, \r\n    ORDER_DETAILS_SUCCESS, \r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS, \r\n    ORDER_LIST_MY_FAIL, \r\n    ORDER_LIST_MY_RESET, \r\n    ORDER_LIST_REQUEST, \r\n    ORDER_LIST_SUCCESS, \r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVERED_REQUEST,\r\n    ORDER_DELIVERED_SUCCESS,\r\n    ORDER_DELIVERED_FAIL, \r\n    ORDER_DELIVERED_RESET,  \r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = ( state={}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_SUCCESS_REQUEST: \r\n            return {\r\n                loading: false, \r\n                success: true, \r\n                order: action.payload\r\n            }\r\n        case ORDER_FAIL_REQUEST: \r\n            return {\r\n                loading: false,  \r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET: \r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress: {}}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                //...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false, \r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL: \r\n            return {\r\n                loading: false,  \r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = ( state={orders: []}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS: \r\n            return {\r\n                loading: false, \r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_MY_FAIL: \r\n            return {\r\n                loading: false,  \r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET: \r\n            return {orders: {}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = ( state={ orders: []}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_SUCCESS: \r\n            return {\r\n                loading: false, \r\n                orders: action.payload\r\n            }\r\n        case ORDER_LIST_FAIL: \r\n            return {\r\n                loading: false,  \r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliveredReducer = ( state={}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVERED_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVERED_SUCCESS: \r\n            return {\r\n                loading: false, \r\n                success: true, \r\n            }\r\n        case ORDER_DELIVERED_FAIL: \r\n            return {\r\n                loading: false,  \r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}